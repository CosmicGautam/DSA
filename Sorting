---------------------------------------------------Bubble Sort----------------------------------------S

#include<stdio.h>
int main()
{
    int i,j,n,temp;
    printf("enter the no of element: ");
    scanf("%d",&n);
    int a[n];
    printf("enter the element: \n");
    for(i=0;i<n;i++)
    {
      
        scanf("%d",&a[i]);
    }
  
    for(i=0;i<n-1;i++)
    {
        for(j=0;j<n-i-1;j++)
        {
            if(a[j]>a[j+1])
            {
                temp=a[j];
                a[j]=a[j+1];
                a[j+1]=temp;
            }
        }
    }
    printf("the elements after sorting are\n");
    for(i=0;i<n;i++)
    {
        printf("%d\t",a[i]);
    }
}


-----------------------------------------------------------Insertion Sort-----------------------------------------------

#include<stdio.h>
int main() {
    int i, j, n, temp;
    printf("Enter the number of elements: ");
    scanf("%d", &n);
    int a[n]; 
    printf("Enter the elements:\n");
    for (i = 0; i < n; i++) {
        scanf("%d", &a[i]);
    }
    for (i = 1; i < n; i++) {
        temp = a[i];
        j = i - 1;
        while (j >= 0 && temp < a[j]) {
            a[j + 1] = a[j];
            j--;
        }
        a[j + 1] = temp;
    }
    printf("The elements after sorting are:\n");
    for (i = 0; i < n; i++) {
        printf("%d\t", a[i]);
    }
    printf("\n");
    return 0;
}


------------------------------------------------Merge Sort----------------------------------

#include<stdio.h>
void merge(int a[],int l,int m, int r)
{
    int x=l;
    int k=l,i;
    int b[10];
    int y=m;
    while (x<m&&y<=r)
    {
        if(a[x]<a[y])
        {
            b[k++]=a[x++];
        }
        else{
            b[k++]=a[y++];
        }
    }
    while(x<m)
    {
        b[k++]=a[x++];
    }
    while(y<=r)
    {
        b[k++]=a[y++];
    }
    for(i=l;i<=r;i++)
    {
        a[i]=b[i];
    }
    
}
void merge_sort(int a[],int l,int r)
{
    int mid;
    if(l<r)
    {
        mid=(l+r)/2;
        merge_sort(a,l,mid);
        merge_sort(a,mid+1,r);
        merge(a,l,mid+1,r);
    }
}
void main()
{
    int a[100],n,i,l,r;
    printf("enter the no of element: ");
    scanf("%d",&n);
    printf("enter %d elements ",n);
    l=0;
    r=n-1;
    for(i=0;i<n;i++)
    {
        scanf("%d",&a[i]);
    }
    merge_sort(a,l,r);
    printf("\n elements after sort are\n ");
    for(i=0;i<n;i++)
    {
        printf("%d\t",a[i]);
    }
}


-------------------------------------------------Quick Sort----------------------------------------------

#include<stdio.h>
void swap(int *a, int *b) {
    int temp = *a;
    *a = *b;
    *b = temp;
}
int partition(int arr[], int low, int high) {
    int pivot = arr[high]; 
    int i = (low - 1); 
	int j;
    for (j = low; j <= high - 1; j++) {
        if (arr[j] <= pivot) {
            i++; 
            swap(&arr[i], &arr[j]);
        }
    }
    swap(&arr[i + 1], &arr[high]);
    return (i + 1);
}

void quickSort(int arr[], int low, int high) {
    if (low < high) {
        int pi = partition(arr, low, high);
        quickSort(arr, low, pi - 1);
        quickSort(arr, pi + 1, high);
    }
}

int main() {
    int n,i;
    printf("Enter the number of elements: ");
    scanf("%d", &n);
    int arr[n];
    printf("Enter %d elements:\n", n);
    for (i = 0; i < n; i++) {
        scanf("%d", &arr[i]);
    }

    printf("Original array: \n");
    for (i = 0; i < n; i++) {
        printf("%d ", arr[i]);
    }
    printf("\n");

    quickSort(arr, 0, n - 1);

    printf("Sorted array: \n");
    for (i = 0; i < n; i++) {
        printf("%d ", arr[i]);
    }
    printf("\n");
    return 0;
}


---------------------------------------Selection Sort------------------------------

#include<stdio.h>
void swap(int *a, int *b) {
    int temp = *a;
    *a = *b;
    *b = temp;
}

void selectionSort(int arr[], int n) {
    int i, j, min_idx;
    for (i = 0; i < n-1; i++) {
        min_idx = i;
        for (j = i+1; j < n; j++) {
            if (arr[j] < arr[min_idx]) {
                min_idx = j;
            }
        }
        swap(&arr[min_idx], &arr[i]);
    }
}

int main() {
    int i, n;
    printf("Enter the number of elements: ");
    scanf("%d", &n);
    int arr[n]; 
    printf("Enter the elements:\n");
    for (i = 0; i < n; i++) {
        scanf("%d", &arr[i]);
    }
    selectionSort(arr, n);
    printf("The elements after sorting are:\n");
    for (i = 0; i < n; i++) {
        printf("%d\t", arr[i]);
    }
    printf("\n");
    return 0;
}
